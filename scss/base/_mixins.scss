/*
    Example usage:
    @include animation(10s, 5s, changecolour, ease-in, alternate, 3)
 */
@mixin animation ($delay, $duration, $animation, $ease:"linear", $dir:"normal", $count:1) {
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-name: $animation;
  -webkit-animation-timing-function: unquote($ease);
  -webkit-animation-direction: $dir;
  -webkit-animation-iteration-count: $count;
  -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-name: $animation;
  -moz-animation-timing-function: unquote($ease);
  -moz-animation-direction: $dir;
  -moz-animation-iteration-count: $count;
  -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  -o-animation-delay: $delay;
  -o-animation-duration: $duration;
  -o-animation-name: $animation;
  -o-animation-timing-function: unquote($ease);
  -o-animation-direction: $dir;
  -o-animation-iteration-count: $count;
  -o-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-timing-function: unquote($ease);
  animation-direction: $dir;
  animation-iteration-count: $count;
  animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}

@mixin clear-animation () {
  -webkit-animation: none;
  -moz-animation: none;
  -o-animation: none;
  animation: none;
}

@mixin border-radius($val: 3px){
  -webkit-border-radius:$val;
          border-radius:$val;
}

// @mixin box-shadow{
//  -webkit-box-shadow:inset 0 0 3px $color-accent;
//          box-shadow:inset 0 0 3px $color-accent;
// }

@mixin border-box{
    -webkit-box-sizing:border-box;
       -moz-box-sizing:border-box;
            box-sizing:border-box;
}

// keyframes mixin
/*
    Example usage:
@include keyframes(bgcolor) {
  0% {
    background-color: #ffccf2;
  }
  50% {
    background-color: #ccffcc;
  }
  100% {
    background-color: #ccffff;
  }
}
*/

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin transform($val) {
  -webkit-transform: $val;
  -moz-transform: $val;
  -ms-transform: $val;
  transform: $val;
}

@mixin transition($val...) {
  -webkit-transition: $val;
  -moz-transition:$val;
  -o-transition:$val;
  -ms-transition:$val;
  transition:$val;
}

@mixin transition-delay($delay...) {
  -moz-transition-delay:    $delay;
  -o-transition-delay:      $delay;
  -webkit-transition-delay: $delay;
  transition-delay:         $delay;
}

@mixin transition-duration ($val...) {
  -webkit-transition-duration: $val;
  -moz-transition-duration:$val;
  -o-transition-duration:$val;
  -ms-transition-duration:$val;
  transition-duration:$val;
}

@mixin linear-gradient($element, $angle, $color-stops...) {
  $_angle-with-vendor-prefix: "";
  $_angle: "";
  @if $angle == "to top" or $angle == "bottom" {
    $_angle-with-vendor-prefix: bottom;
    $_angle: to top;
  } @else if $angle == "to right" or $angle == "left" {
    $_angle-with-vendor-prefix: left;
    $_angle: to right;
  } @else if $angle == "to bottom" or $angle == "top" {
    $_angle-with-vendor-prefix: top;
    $_angle: to bottom;
  } @else if $angle == "to left" or $angle == "right" {
    $_angle-with-vendor-prefix: right;
    $_angle: to left;
  } @else if $angle == "to top right" or $angle == "bottom left" {
    $_angle-with-vendor-prefix: bottom left;
    $_angle: to top right;
  } @else if $angle == "to bottom right" or $angle == "top left" {
    $_angle-with-vendor-prefix: top left;
    $_angle: to bottom right;
  } @else if $angle == "to bottom left" or $angle == "top right" {
    $_angle-with-vendor-prefix: top right;
    $_angle: to bottom left;
  } @else if $angle == "to top left" or $angle == "bottom right" {
    $_angle-with-vendor-prefix: bottom right;
    $_angle: to top left;
  } @else {
    $_angle-with-vendor-prefix: $angle % 360;
    $_angle: (90 - $angle) % 360;
  }
  #{$element}: -webkit-linear-gradient($_angle-with-vendor-prefix, $color-stops);
  #{$element}: -moz-linear-gradient($_angle-with-vendor-prefix, $color-stops);
  #{$element}: -o-linear-gradient($_angle-with-vendor-prefix, $color-stops);
  #{$element}: linear-gradient($_angle, $color-stops);
}

@mixin user-select ($val) {
  -webkit-touch-callout: $val;
  -webkit-user-select: $val;
  -khtml-user-select: $val;
  -moz-user-select: $val;
  -ms-user-select: $val;
  user-select: $val;
}

@mixin box-shadow($horizontal: 0px, $vertical: 1px, $blur: 2px, $color: #CCC) {
  -webkit-box-shadow: $horizontal $vertical $blur $color;
  -moz-box-shadow: $horizontal $vertical $blur $color;
  box-shadow: $horizontal $vertical $blur $color;
}

$a-tags: 'a, a:active, a:hover, a:visited';




// Media Query Mixins
@mixin small-screen{
  @media only screen and (max-width: 480px) {
    @content;
  }
}
@mixin max-800{
   @media only screen and (max-width: 800px) {
    @content;
  }
}
@mixin max-1023{
   @media only screen and (max-width: 1023px) {
    @content;
  }
}
@mixin min-1023{
   @media only screen and (min-width: 1023px) {
    @content;
  }
}
@mixin medium-screen{
  @media only screen and (min-width: 800px) {
    @content;
  }
}
@mixin medium-screen-only{
  @media only screen and (min-width: 480px) and (max-width: 800px) {
    @content;
  }
}
@mixin large-screen{
  @media only screen and (min-width: 1200px) {
    @content;
  }
}

@mixin large-screen-max{
  @media only screen and (max-width: 1200px) {
    @content;
  }
}
@mixin max-1280{
   @media only screen and (max-width: 1280px) {
    @content;
  }
}
// I added these just in case
@mixin large-screen-only{
  @media only screen and (min-width: 1200px) and (max-width: 2700px) {
    @content;
  }
}
@mixin xlarge-screen{
  @media only screen and (min-width: 1600px) {
    @content;
  }
}
@mixin xlarge-screen-only{
  @media only screen and (min-width: 1600px) and (max-width: 2000px) {
    @content;
  }
}
@mixin xxlarge-screen{
  @media only screen and (min-width: 2000px) {
    @content;
  }
}
